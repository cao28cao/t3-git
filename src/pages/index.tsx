import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";

import { Button } from "~/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "~/components/ui/dropdown-menu";
import { MoonIcon, SunIcon } from "@radix-ui/react-icons";
import { useTheme } from "next-themes";

import { RouterOutputs, api } from "~/utils/api";
import { Input } from "~/components/ui/input";

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user);
  if (!user) return null;

  return (
    <div className="mx-2 mt-4 flex flex-row">
      <img
        src={user.imageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
      />
      <Input placeholder="What's on your mind?" type="text" />
    </div>
  );
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const {post, author} = props;
  return (
    <div key={post.id} className="mx-2 mt-4 flex flex-row">
      <img
        src={author?.imageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
      />
      <div className="flex flex-col">
        <div className="text-sm">{post.content}</div>
      </div>
    </div>
  );
}

export default function Home() {
  const user = useUser();
  const { data, isLoading } = api.post.getAll.useQuery();
  if (!data) return <div>Something is not gud</div>;
  if (isLoading) return <div>Loading...</div>;

  const { setTheme } = useTheme();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-spacing-2 border-x border-slate-400 md:max-w-3xl">
          <div className="mt-2 flex h-[40px] flex-row gap-2">
            <div className="ml-auto">
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="outline" size="icon">
                    <SunIcon className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
                    <MoonIcon className="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
                    <span className="sr-only">Toggle theme</span>
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuItem onClick={() => setTheme("light")}>
                    Light
                  </DropdownMenuItem>
                  <DropdownMenuItem onClick={() => setTheme("dark")}>
                    Dark
                  </DropdownMenuItem>
                  <DropdownMenuItem onClick={() => setTheme("system")}>
                    System
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </div>
            <div className="min-h-screen flex-col items-center justify-center">
              {!user.isSignedIn && (
                <Button>
                  <SignInButton />
                </Button>
              )}
              {!!user.isSignedIn && (
                <Button>
                  <SignOutButton />
                </Button>
              )}
            </div>
            <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          </div>
          {user.isSignedIn && <CreatePostWizard />}

          <div className="mt-4 border-t border-slate-200">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
